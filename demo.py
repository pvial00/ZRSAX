from Crypto.Util import number
from zrsaXdemo import encrypt, decrypt, sign, verify

# requires pycrypto

# This script demonstrates a signed communication between Alice and Bob

# Alice's keys
alice_sk = 190163845827740455983638219475460159782828560000647035261246659068688200394152086598262635860146432940973098414909706620241433519146018815024586590950847420200951188887805983876304363232526079178293564954356742542497969606598943661923244304081126439512386111910072029806490959457437720895440542359018229187553449442141974877429445254146562990985425533855065806236983461499345373269680863282858298078141049372448787893449762015532782154349349078352070308271137447867983245056494962784293333946948643269570827047978613158398848304942104974604575311378126346079591752720457413551339988455688271817801525140226231943326134633766495913909178787875025125283304233546452536020198593797620455844895878474229542960887514480882664778742450151285360457908096801
alice_pk = 19034529149539273604005071482456406013884899036870604585699731600795551900282462180762202313616980828882257419149515033390318549978944568218836703688279143630736773530195046640004324470026209528378768819144162585213588535927321758782024305914690372239223593501990792634336467536456861394069394285663533387316351999722149122666624119379717308390097042966646030016184902327593079174672552776653505475227495915497138348180573432154030126604532547412784391500072186948372557980980313156768062907261261801767163773208927784516549993680053842785229530839065383352931957734739256043356447662365674167682502045911177289229459597875050009681740735963382593908199806842081
alice_mod = 6716162937131979928331738634916465631311725941055825609291183489972379166814085747826317

# Bob's keys
bob_sk = 112460864021235249416427663317748751803017399668811557406836282751195249614512384357267612970939913291909504324082669974953416107239107459301115557463696270648064267093708578639829406005309707510717692552291556465497103565677469198513281390328428813697542729887877546158315882990264962332828373501069426816134453432536031938928341497956025455519481374822886275778832059368303074978973348197441693938276745860667365165933186348336774664698498607255617122486117656681940093652755321175597896941282139638940095580227936496892968893572881845444475662212302710636781317800098641473666912532536875322739778873835318666947518893715267384737950296908581246372935398357478428464069452643123417611888375216823761721598616474876491901942314721
bob_pk = 1841940543130381619474943132669851342401147316519718344533084557975069258279134076453928544312293435917197765705100880997140776883137393631569553052640087789581900679899454995160512903917774165829108782471920302923640792013100440065691796879188284379225090763582136235701634909805739719198976019841566578862231845649486918299623365357335346292764441428158165595061782377713091050919982800225260415045848388972423215701789629359643296743190050322790402650710138900572996170925169113377033094029415357041183021764142379713657472129020293906772792681762716235185429651844518557733368031484435012945131157108101319463419607725316982189892825308040481
bob_mod = 66886413194890377912070359632139472601649879392736771933877699117374118933353290461333
bob_sk = 660105386857659778382094844569359085160980613508325385643857372055910255394360020447645558727819353111650512553675250021245542926953850256182241305389647258034546887781536544436052021279806011759110817002802714417059168724921388149087575021191612320268331179110241986309740486690478508830518517110357758157483
bob_mod = 503904223192765423450926936662182081001430146190223084606885606837487118618897229394257947470935699972667485161649884060461991222653188029439429891070945845214250621076777029715549935881774251135393370692497291837001422730441325244608348203036472087228918533301048696750751109083518659530240106560557404865633


# Messages to be sent
print "Alice wants to send the message"
alice_msg = "Hello Bob!"
print alice_msg
print "Bob wants to send the message"
bob_msg = "Hello Alice!"
print bob_msg

# Encryption of the messages
alice_m = number.bytes_to_long(alice_msg)
bob_m = number.bytes_to_long(bob_msg)

print "Alice encrypts a message to Bob with his public key and modulus"
to_bob = encrypt(alice_m, bob_pk, bob_mod)
print to_bob
print "Bob encrypts a message to Alice with her public key and modulus"
to_alice = encrypt(bob_m, alice_pk, alice_mod)
print to_alice

# Signing of the messages
print "Alice signs her message to Bob using her secret key and modulus"
to_bob_sign = sign(to_bob, alice_sk, alice_mod)
print to_bob_sign
print "Bob signs his message to Alice using his secret key and modulus"
to_alice_sign = sign(to_alice, bob_sk, bob_mod)
print to_alice_sign

# They exchange messages and decrypt

print "Alice receives a message from Bob and decrypts it with her private key"
from_bob_m = decrypt(to_alice, alice_sk, alice_mod)
print from_bob_m
print "Bob receives a message from Alice and decrypts it with his private key"
from_alice_m = decrypt(to_bob, bob_sk, bob_mod)
print from_alice_m

# Alice and Bob compute the signature verification and if it's True then they know the message originated from the correct sender

# Bob verifies and reads the message
print "Bob verifies the contents of the message using his public key and the signature"
if verify(from_alice_m, to_bob, bob_pk, bob_mod, to_bob_sign):
    print "Bob reads the message:"
    print number.long_to_bytes(from_alice_m)

# Alice verifies and reads the message
print "Alice verifies the contents of the message using her public key and the signature"
if verify(from_bob_m, to_alice, alice_pk, alice_mod, to_alice_sign):
    print "Alice reads the message"
    print number.long_to_bytes(from_bob_m)
